import React, { Component } from 'react'
import {
  View,
  Alert,
  ScrollView,
  Button,
  Text,
  Switch
} from 'react-native'
import { connect } from 'react-redux'

// Styles
import styles from './Styles/ExploitScreenStyle'

class ExploitScreen extends Component {
  static navigationOptions = ({navigation}) => ({
    title: `${navigation.state.params.network.SSID}`
  });

  constructor (props) {
    super(props)
    const { params } = this.props.navigation.state
    this.state = {
      switchValue: true,
      vendor: '',
      exploitStatus: 'This device has been PATCHED',
      exploitTable: ['C']
    }

    this._exploit(params.network.BSSID)
  }

  _exploit = (bssid) => {
    fetch('http://api.macvendors.com/' + bssid)
      .then((response) => {
        return response.text()
      })
      .then((responseText) => {
        this.state.vendor = responseText
      })
  }

  _check = () => {
    if (this.state.exploitTable.indexOf(this.state.vendor.toLowerCase()) > -1) {
      this.state.exploitStatus = 'This device has NOT been patched! You are vulnerable to a Krack Attack. Please consider contacting ' + this.state.vendor + ' about this issue'
    }
  }

  _handleToggleSwitch = () => this.setState(state => ({
    switchValue: !state.switchValue
  }));

  render () {
    const { params } = this.props.navigation.state

    return (
      <View style={styles.screen}>
        <ScrollView style={styles.infoContainer}>

          <View style={styles.entry}>
            <Text style={styles.entryLabel}>
              Protocol
            </Text>
            <Text style={[styles.entryValue, styles.entryValueText]}>
              {params.network.capabilities}
            </Text>
          </View>

          <View style={styles.entry}>
            <Text style={styles.entryLabel}>
              Range
            </Text>
            <Text style={[styles.entryValue, styles.entryValueText]}>
              {params.network.level}
            </Text>
          </View>

          <View style={styles.entry}>
            <Text style={styles.entryLabel}>
              Frequency
            </Text>
            <Text style={[styles.entryValue, styles.entryValueText]}>
              {params.network.frequency}
            </Text>
          </View>

          <View style={styles.entry}>
            <Text style={styles.entryLabel}>
              BSSID
            </Text>
            <Text style={[styles.entryValue, styles.entryValueText]}>
              {params.network.BSSID}
            </Text>
          </View>

          <View style={styles.entry}>
            <Text style={styles.entryLabel}>
              Vendor
            </Text>
            <Text style={[styles.entryValue, styles.entryValueText]}>
              {this.state.vendor}
            </Text>
          </View>

        </ScrollView>

        <View style={styles.controlContainer}>
          <Button title={'Check for Exploit'}
                  color={'red'}
                  style={styles.button}
                  onPress={() => Alert.alert('Exploit Status', this.state.exploitStatus)} />

          <Button title={'Add to Watched List'}
                  color={'#8b9dc3'}
                  style={styles.button}
                  onPress={() => Alert.alert('Watching', 'Device will now be monitored for changing status. You will be alerted if any changes occur')} />

          <Button title={'Connect to Network'}
                  color={'#3b5998'}
                  style={styles.button}
                  onPress={() => Alert.alert('Connecting', '...')} />
        </View>
      </View>
    )
  }
}

const mapStateToProps = (state) => {
  return {
  }
}

const mapDispatchToProps = (dispatch) => {
  return {
  }
}

export default connect(mapStateToProps, mapDispatchToProps)(ExploitScreen)
