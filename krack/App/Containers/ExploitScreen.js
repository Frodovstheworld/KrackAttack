import React, { Component } from 'react'
import {
  View,
  Alert,
  ScrollView,
  Button,
  Text,
  Switch
} from 'react-native'
import { connect } from 'react-redux'

// Styles
import styles from './Styles/ExploitScreenStyle'

class ExploitScreen extends Component {
  static navigationOptions = ({navigation}) => ({
    title: `${navigation.state.params.network.SSID}`
  });

  state = {
    switchValue: true
  };

  _handleToggleSwitch = () => this.setState(state => ({
    switchValue: !state.switchValue
  }));

  render () {
    const { params } = this.props.navigation.state

    return (
      <View style={styles.screen}>
        <ScrollView style={styles.infoContainer}>

          <View style={styles.entry}>
            <Text style={styles.entryLabel}>
              Protocol
            </Text>
            <Text style={[styles.entryValue, styles.entryValueText]}>
              {params.network.capabilities}
            </Text>
          </View>

          <View style={styles.entry}>
            <Text style={styles.entryLabel}>
              Range
            </Text>
            <Text style={[styles.entryValue, styles.entryValueText]}>
              {params.network.level}
            </Text>
          </View>

          <View style={styles.entry}>
            <Text style={styles.entryLabel}>
              Frequency
            </Text>
            <Text style={[styles.entryValue, styles.entryValueText]}>
              {params.network.frequency}
            </Text>
          </View>

          <View style={styles.entry}>
            <Text style={styles.entryLabel}>
              BSSID
            </Text>
            <Text style={[styles.entryValue, styles.entryValueText]}>
              {params.network.BSSID}
            </Text>
          </View>

          <View style={styles.entry}>
            <Text style={styles.entryLabel}>
              Capture Data
            </Text>
            <Switch onValueChange={this._handleToggleSwitch}
              value={this.state.switchValue}
              style={styles.entryValue} />
          </View>
        </ScrollView>

        <View style={styles.controlContainer}>
          <Button title={'ATTACK'}
            color={'red'}
            style={styles.button}
            onPress={() => Alert.alert('BOOM', 'WIFI DOWN')} />

          <Button title={'Add to Watched List'}
            color={'#8b9dc3'}
            style={styles.button}
            onPress={() => Alert.alert('BOOM', 'WIFI DOWN')} />

          <Button title={'Find connected router'}
            color={'#8b9dc3'}
            style={styles.button}
            onPress={() => Alert.alert('BOOM', 'WIFI DOWN')} />

          <Button title={'Send Text informing AP'}
            color={'#3b5998'}
            style={styles.button}
            onPress={() => Alert.alert('BOOM', 'WIFI DOWN')} />
        </View>
      </View>
    )
  }
}

const mapStateToProps = (state) => {
  return {
  }
}

const mapDispatchToProps = (dispatch) => {
  return {
  }
}

export default connect(mapStateToProps, mapDispatchToProps)(ExploitScreen)
